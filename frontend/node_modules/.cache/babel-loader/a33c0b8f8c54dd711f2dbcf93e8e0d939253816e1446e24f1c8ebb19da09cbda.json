{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Downloads\\\\Pyitonit\\\\PROJS\\\\GDG 3\\\\gdg-edtech-hackathon\\\\frontend\\\\src\\\\components\\\\InteractionComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InteractionComponent({\n  interactionData,\n  onAnswerSubmit,\n  isLoading\n}) {\n  _s();\n  const [answer, setAnswer] = useState('');\n\n  // Clear answer field when interaction data changes (new question/material)\n  useEffect(() => {\n    setAnswer('');\n  }, [interactionData]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Allow submitting even if question is null (e.g., initial step or just material shown)\n    // Trim answer to ensure empty spaces aren't submitted as valid answers unless intended\n    if (answer.trim() || !(interactionData !== null && interactionData !== void 0 && interactionData.question_for_user)) {\n      onAnswerSubmit(answer);\n      // Clear input after submit only if successful? Or always? Let's clear always for now.\n      // setAnswer(''); // Clearing is now handled by useEffect\n    } else if (!answer.trim() && interactionData !== null && interactionData !== void 0 && interactionData.question_for_user) {\n      // Optionally provide feedback if answer is required but empty\n      alert(\"Please provide an answer to the question.\");\n    }\n  };\n  if (!interactionData) {\n    // Show loading state consistent with App.js loading indicator\n    // return <p>Loading interaction...</p>; // Can be removed if App.js handles global loading state display\n    return null; // Or a minimal loader if preferred inside the component area\n  }\n\n  // Destructure data including the new image_url\n  const {\n    material,\n    question_for_user,\n    session_finished,\n    image_url\n  } = interactionData;\n\n  // This component shouldn't be rendered if session is finished (App.js handles this)\n  // but adding a check just in case.\n  if (session_finished) {\n    console.warn(\"InteractionComponent rendered when session is finished.\");\n    return null; // Or redirect / show message\n  }\n\n  // --- Determine Base URL for Images ---\n  // In development, backend is likely http://localhost:8080\n  // In production, backend could be anywhere. Assume relative path works if served from same domain,\n  // otherwise, need to configure the full base URL.\n  // Using REACT_APP_API_URL's base seems reasonable.\n  const apiBaseUrl = process.env.REACT_APP_API_URL || 'http://localhost:8080';\n  // Remove '/api' suffix if present to get the actual base\n  const imageBaseUrl = apiBaseUrl.replace(/\\/api$/, '');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"interaction-container\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: \"Processing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }, this), material && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"material-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Learning Material:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), image_url && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"material-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${imageBaseUrl}${image_url}`,\n          alt: \"Visual aid related to the learning material\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          whiteSpace: 'pre-wrap'\n        },\n        children: material\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), question_for_user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Question:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: question_for_user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: answer,\n          onChange: e => setAnswer(e.target.value),\n          placeholder: \"Your answer...\",\n          rows: \"4\",\n          disabled: isLoading // Disable input while loading\n          ,\n          \"aria-label\": \"Answer to the question\" // Accessibility\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading,\n          children: \"Submit Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), material && !question_for_user && !isLoading && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }, this), !material && !question_for_user && !isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Waiting for the next step...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(InteractionComponent, \"dOASnFDgECg0lV2u636icfza9eQ=\");\n_c = InteractionComponent;\nexport default InteractionComponent;\nvar _c;\n$RefreshReg$(_c, \"InteractionComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","InteractionComponent","interactionData","onAnswerSubmit","isLoading","_s","answer","setAnswer","handleSubmit","e","preventDefault","trim","question_for_user","alert","material","session_finished","image_url","console","warn","apiBaseUrl","process","env","REACT_APP_API_URL","imageBaseUrl","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","whiteSpace","onSubmit","value","onChange","target","placeholder","rows","disabled","type","_c","$RefreshReg$"],"sources":["C:/Users/David/Downloads/Pyitonit/PROJS/GDG 3/gdg-edtech-hackathon/frontend/src/components/InteractionComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction InteractionComponent({ interactionData, onAnswerSubmit, isLoading }) {\r\n  const [answer, setAnswer] = useState('');\r\n\r\n  // Clear answer field when interaction data changes (new question/material)\r\n  useEffect(() => {\r\n      setAnswer('');\r\n  }, [interactionData]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Allow submitting even if question is null (e.g., initial step or just material shown)\r\n    // Trim answer to ensure empty spaces aren't submitted as valid answers unless intended\r\n    if (answer.trim() || !interactionData?.question_for_user) {\r\n        onAnswerSubmit(answer);\r\n        // Clear input after submit only if successful? Or always? Let's clear always for now.\r\n        // setAnswer(''); // Clearing is now handled by useEffect\r\n    } else if (!answer.trim() && interactionData?.question_for_user) {\r\n        // Optionally provide feedback if answer is required but empty\r\n        alert(\"Please provide an answer to the question.\");\r\n    }\r\n  };\r\n\r\n\r\n  if (!interactionData) {\r\n    // Show loading state consistent with App.js loading indicator\r\n    // return <p>Loading interaction...</p>; // Can be removed if App.js handles global loading state display\r\n    return null; // Or a minimal loader if preferred inside the component area\r\n  }\r\n\r\n  // Destructure data including the new image_url\r\n  const { material, question_for_user, session_finished, image_url } = interactionData;\r\n\r\n  // This component shouldn't be rendered if session is finished (App.js handles this)\r\n  // but adding a check just in case.\r\n  if (session_finished) {\r\n      console.warn(\"InteractionComponent rendered when session is finished.\");\r\n      return null; // Or redirect / show message\r\n  }\r\n\r\n  // --- Determine Base URL for Images ---\r\n  // In development, backend is likely http://localhost:8080\r\n  // In production, backend could be anywhere. Assume relative path works if served from same domain,\r\n  // otherwise, need to configure the full base URL.\r\n  // Using REACT_APP_API_URL's base seems reasonable.\r\n  const apiBaseUrl = process.env.REACT_APP_API_URL || 'http://localhost:8080';\r\n  // Remove '/api' suffix if present to get the actual base\r\n  const imageBaseUrl = apiBaseUrl.replace(/\\/api$/, '');\r\n\r\n\r\n  return (\r\n    <div className=\"interaction-container\">\r\n      {/* Loading overlay specific to interaction processing */}\r\n      {isLoading && <div className=\"loading-overlay\">Processing...</div>}\r\n\r\n      {/* Material Section */}\r\n      {material && (\r\n        <div className=\"material-section\">\r\n          <h3>Learning Material:</h3>\r\n          {/* --- MODIFICATION: Display Image if URL exists --- */}\r\n          {image_url && (\r\n            <div className=\"material-image\">\r\n              {/* Construct full URL if needed, or use relative path if served from same origin */}\r\n              <img src={`${imageBaseUrl}${image_url}`} alt=\"Visual aid related to the learning material\" />\r\n            </div>\r\n          )}\r\n          {/* Apply pre-wrap styling for text formatting */}\r\n          <p style={{ whiteSpace: 'pre-wrap' }}>{material}</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Question and Answer Section */}\r\n      {question_for_user && (\r\n        <div className=\"question-section\">\r\n          <h3>Question:</h3>\r\n          <p>{question_for_user}</p>\r\n          <form onSubmit={handleSubmit}>\r\n            <textarea\r\n              value={answer}\r\n              onChange={(e) => setAnswer(e.target.value)}\r\n              placeholder=\"Your answer...\"\r\n              rows=\"4\"\r\n              disabled={isLoading} // Disable input while loading\r\n              aria-label=\"Answer to the question\" // Accessibility\r\n            />\r\n            <button type=\"submit\" disabled={isLoading}>Submit Answer</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n       {/* Handle case where there might be material but no question (e.g., just info) */}\r\n       {material && !question_for_user && !isLoading && (\r\n           <form onSubmit={handleSubmit}>\r\n                {/* Button to proceed when only material is shown */}\r\n                <button type=\"submit\" disabled={isLoading}>Continue</button>\r\n           </form>\r\n       )}\r\n\r\n       {/* Handle case where waiting for initial load or if somehow both are null */}\r\n       {!material && !question_for_user && !isLoading && (\r\n         <p>Waiting for the next step...</p>\r\n       )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InteractionComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}