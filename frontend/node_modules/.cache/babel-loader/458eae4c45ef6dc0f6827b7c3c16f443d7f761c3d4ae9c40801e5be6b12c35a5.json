{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Downloads\\\\Pyitonit\\\\PROJS\\\\GDG 3\\\\gdg-edtech-hackathon\\\\frontend\\\\src\\\\components\\\\InteractionComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InteractionComponent({\n  interactionData,\n  onSubmitAnswer,\n  isLoading\n}) {\n  _s();\n  const [answer, setAnswer] = useState('');\n\n  // Clear answer field when interaction data changes (new question)\n  useEffect(() => {\n    setAnswer('');\n  }, [interactionData]);\n  if (!interactionData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading interaction...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this); // Or handle error state\n  }\n  const {\n    material,\n    question_for_user,\n    session_finished\n  } = interactionData;\n\n  // Should not happen in MVP as we go to results, but good practice\n  if (session_finished) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Session has already finished.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 14\n    }, this);\n  }\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmitAnswer(answer);\n    // Keep answer in textarea until next question loads or session ends\n    // setAnswer(''); // Clear answer field after submission if preferred\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"interaction-component\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Learning Interaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), material && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interaction-material\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Material:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: material\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), question_for_user && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userAnswer\",\n          className: \"interaction-question\",\n          children: question_for_user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"userAnswer\",\n          value: answer,\n          onChange: e => setAnswer(e.target.value),\n          placeholder: \"Your answer here...\",\n          required: true,\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? 'Submitting...' : 'Submit Answer'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), !question_for_user && !isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Waiting for next step...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 45\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(InteractionComponent, \"dOASnFDgECg0lV2u636icfza9eQ=\");\n_c = InteractionComponent;\nexport default InteractionComponent;\nvar _c;\n$RefreshReg$(_c, \"InteractionComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","InteractionComponent","interactionData","onSubmitAnswer","isLoading","_s","answer","setAnswer","children","fileName","_jsxFileName","lineNumber","columnNumber","material","question_for_user","session_finished","handleSubmit","e","preventDefault","className","onSubmit","htmlFor","id","value","onChange","target","placeholder","required","disabled","type","_c","$RefreshReg$"],"sources":["C:/Users/David/Downloads/Pyitonit/PROJS/GDG 3/gdg-edtech-hackathon/frontend/src/components/InteractionComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction InteractionComponent({ interactionData, onSubmitAnswer, isLoading }) {\r\n  const [answer, setAnswer] = useState('');\r\n\r\n  // Clear answer field when interaction data changes (new question)\r\n  useEffect(() => {\r\n      setAnswer('');\r\n  }, [interactionData]);\r\n\r\n  if (!interactionData) {\r\n    return <p>Loading interaction...</p>; // Or handle error state\r\n  }\r\n\r\n  const { material, question_for_user, session_finished } = interactionData;\r\n\r\n  // Should not happen in MVP as we go to results, but good practice\r\n  if (session_finished) {\r\n      return <p>Session has already finished.</p>\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmitAnswer(answer);\r\n    // Keep answer in textarea until next question loads or session ends\r\n    // setAnswer(''); // Clear answer field after submission if preferred\r\n  };\r\n\r\n  return (\r\n    <div className=\"interaction-component\">\r\n      <h2>Learning Interaction</h2>\r\n      {material && (\r\n        <div className=\"interaction-material\">\r\n          <h3>Material:</h3>\r\n          <pre>{material}</pre> {/* Use pre for potential formatting */}\r\n        </div>\r\n      )}\r\n      {question_for_user && (\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"userAnswer\" className=\"interaction-question\">{question_for_user}</label>\r\n            <textarea\r\n              id=\"userAnswer\"\r\n              value={answer}\r\n              onChange={(e) => setAnswer(e.target.value)}\r\n              placeholder=\"Your answer here...\"\r\n              required\r\n              disabled={isLoading}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" disabled={isLoading}>\r\n            {isLoading ? 'Submitting...' : 'Submit Answer'}\r\n          </button>\r\n        </form>\r\n      )}\r\n       {!question_for_user && !isLoading && <p>Waiting for next step...</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InteractionComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,oBAAoBA,CAAC;EAAEC,eAAe;EAAEC,cAAc;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC5E,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACZS,SAAS,CAAC,EAAE,CAAC;EACjB,CAAC,EAAE,CAACL,eAAe,CAAC,CAAC;EAErB,IAAI,CAACA,eAAe,EAAE;IACpB,oBAAOF,OAAA;MAAAQ,QAAA,EAAG;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,CAAC;EACxC;EAEA,MAAM;IAAEC,QAAQ;IAAEC,iBAAiB;IAAEC;EAAiB,CAAC,GAAGb,eAAe;;EAEzE;EACA,IAAIa,gBAAgB,EAAE;IAClB,oBAAOf,OAAA;MAAAQ,QAAA,EAAG;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC/C;EAEA,MAAMI,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBf,cAAc,CAACG,MAAM,CAAC;IACtB;IACA;EACF,CAAC;EAED,oBACEN,OAAA;IAAKmB,SAAS,EAAC,uBAAuB;IAAAX,QAAA,gBACpCR,OAAA;MAAAQ,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC5BC,QAAQ,iBACPb,OAAA;MAAKmB,SAAS,EAAC,sBAAsB;MAAAX,QAAA,gBACnCR,OAAA;QAAAQ,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBZ,OAAA;QAAAQ,QAAA,EAAMK;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CACN,EACAE,iBAAiB,iBAChBd,OAAA;MAAMoB,QAAQ,EAAEJ,YAAa;MAAAR,QAAA,gBAC3BR,OAAA;QAAKmB,SAAS,EAAC,YAAY;QAAAX,QAAA,gBACzBR,OAAA;UAAOqB,OAAO,EAAC,YAAY;UAACF,SAAS,EAAC,sBAAsB;UAAAX,QAAA,EAAEM;QAAiB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxFZ,OAAA;UACEsB,EAAE,EAAC,YAAY;UACfC,KAAK,EAAEjB,MAAO;UACdkB,QAAQ,EAAGP,CAAC,IAAKV,SAAS,CAACU,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE;UAC3CG,WAAW,EAAC,qBAAqB;UACjCC,QAAQ;UACRC,QAAQ,EAAExB;QAAU;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNZ,OAAA;QAAQ6B,IAAI,EAAC,QAAQ;QAACD,QAAQ,EAAExB,SAAU;QAAAI,QAAA,EACvCJ,SAAS,GAAG,eAAe,GAAG;MAAe;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACP,EACC,CAACE,iBAAiB,IAAI,CAACV,SAAS,iBAAIJ,OAAA;MAAAQ,QAAA,EAAG;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEV;AAACP,EAAA,CAxDQJ,oBAAoB;AAAA6B,EAAA,GAApB7B,oBAAoB;AA0D7B,eAAeA,oBAAoB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}