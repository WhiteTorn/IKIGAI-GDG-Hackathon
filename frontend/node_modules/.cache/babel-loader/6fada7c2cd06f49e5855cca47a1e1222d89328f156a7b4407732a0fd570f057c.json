{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Downloads\\\\Pyitonit\\\\PROJS\\\\GDG 2\\\\gdg-edtech-hackathon\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport FormComponent from './components/FormComponent';\nimport PathSelectionComponent from './components/PathSelectionComponent';\nimport InteractionComponent from './components/InteractionComponent';\nimport ResultsComponent from './components/ResultsComponent';\nimport './App.css';\n\n// Use environment variable for API URL or default to localhost for development\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\nfunction App() {\n  _s();\n  const [currentStep, setCurrentStep] = useState('form'); // 'form', 'paths', 'interaction', 'results'\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [learningPaths, setLearningPaths] = useState([]);\n  const [interactionData, setInteractionData] = useState(null); // { material, question_for_user, session_finished, summary }\n  const [finalSummary, setFinalSummary] = useState('');\n  const [formDataForRetry, setFormDataForRetry] = useState(null); // Store form data if needed for retry/restart\n\n  // --- API Call Functions ---\n\n  const handleApiCall = useCallback(async (endpoint, method = 'GET', body = null) => {\n    setIsLoading(true);\n    setError('');\n    try {\n      const options = {\n        method,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      if (body) {\n        options.body = JSON.stringify(body);\n      }\n      const response = await fetch(`${API_BASE_URL}${endpoint}`, options);\n      if (!response.ok) {\n        let errorMsg = `HTTP error! status: ${response.status}`;\n        try {\n          const errData = await response.json();\n          errorMsg = errData.message || errorMsg;\n        } catch (e) {\n          // Ignore if response is not JSON\n        }\n        throw new Error(errorMsg);\n      }\n      const data = await response.json();\n      if (data.status !== 'success') {\n        throw new Error(data.message || 'API request failed');\n      }\n      return data; // Return the payload part of the response\n    } catch (err) {\n      console.error(\"API Call Error:\", err);\n      setError(err.message || 'An unexpected error occurred.');\n      return null; // Indicate failure\n    } finally {\n      setIsLoading(false);\n    }\n  }, []); // No dependencies needed for useCallback here\n\n  const handleFormSubmit = useCallback(async formData => {\n    setFormDataForRetry(formData); // Save form data\n    const data = await handleApiCall('/analyze_form', 'POST', formData);\n    if (data) {\n      // Directly fetch paths after successful form submission\n      const pathData = await handleApiCall('/get_learning_paths', 'GET');\n      if (pathData && pathData.paths) {\n        setLearningPaths(pathData.paths);\n        setCurrentStep('paths');\n      } else {\n        setError(error || 'Failed to fetch learning paths after submitting form.');\n      }\n    }\n  }, [handleApiCall, error]); // Add error to dependency array if needed\n\n  const handlePathSelection = useCallback(async pathName => {\n    const data = await handleApiCall('/start_quiz', 'POST', {\n      chosen_path_name: pathName\n    });\n    if (data && data.interaction) {\n      setInteractionData(data.interaction);\n      setCurrentStep('interaction');\n    }\n  }, [handleApiCall]);\n  const handleInteractionSubmit = useCallback(async answer => {\n    const data = await handleApiCall('/submit_answer', 'POST', {\n      answer\n    });\n    if (data && data.interaction) {\n      setInteractionData(data.interaction); // Update interaction state (might contain summary)\n      if (data.interaction.session_finished) {\n        setFinalSummary(data.interaction.summary || 'Session finished.');\n        setCurrentStep('results');\n      }\n      // If session_finished is false, we'd stay in 'interaction' step\n      // but for MVP, it always finishes here.\n    }\n  }, [handleApiCall]);\n  const handleRestart = () => {\n    // Reset state to initial values\n    setCurrentStep('form');\n    setIsLoading(false);\n    setError('');\n    setLearningPaths([]);\n    setInteractionData(null);\n    setFinalSummary('');\n    // Optionally clear formDataForRetry or keep it to pre-fill form\n    // setFormDataForRetry(null);\n  };\n\n  // --- Rendering Logic ---\n\n  const renderStep = () => {\n    switch (currentStep) {\n      case 'form':\n        return /*#__PURE__*/_jsxDEV(FormComponent, {\n          onSubmit: handleFormSubmit,\n          isLoading: isLoading,\n          initialData: formDataForRetry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 16\n        }, this);\n      case 'paths':\n        return /*#__PURE__*/_jsxDEV(PathSelectionComponent, {\n          paths: learningPaths,\n          onSelectPath: handlePathSelection,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 16\n        }, this);\n      case 'interaction':\n        return /*#__PURE__*/_jsxDEV(InteractionComponent, {\n          interactionData: interactionData,\n          onSubmitAnswer: handleInteractionSubmit,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 16\n        }, this);\n      case 'results':\n        return /*#__PURE__*/_jsxDEV(ResultsComponent, {\n          summary: finalSummary,\n          onRestart: handleRestart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Invalid step.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI Learning Assistant MVP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-main\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading-indicator\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 23\n      }, this), renderStep()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"App-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"GDG EdTech Hackathon Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LrBagrHSoYGtswX50pmjmtIPfxI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","FormComponent","PathSelectionComponent","InteractionComponent","ResultsComponent","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","App","_s","currentStep","setCurrentStep","isLoading","setIsLoading","error","setError","learningPaths","setLearningPaths","interactionData","setInteractionData","finalSummary","setFinalSummary","formDataForRetry","setFormDataForRetry","handleApiCall","endpoint","method","body","options","headers","JSON","stringify","response","fetch","ok","errorMsg","status","errData","json","message","e","Error","data","err","console","handleFormSubmit","formData","pathData","paths","handlePathSelection","pathName","chosen_path_name","interaction","handleInteractionSubmit","answer","session_finished","summary","handleRestart","renderStep","onSubmit","initialData","fileName","_jsxFileName","lineNumber","columnNumber","onSelectPath","onSubmitAnswer","onRestart","children","className","_c","$RefreshReg$"],"sources":["C:/Users/David/Downloads/Pyitonit/PROJS/GDG 2/gdg-edtech-hackathon/frontend/src/App.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport FormComponent from './components/FormComponent';\nimport PathSelectionComponent from './components/PathSelectionComponent';\nimport InteractionComponent from './components/InteractionComponent';\nimport ResultsComponent from './components/ResultsComponent';\nimport './App.css';\n\n// Use environment variable for API URL or default to localhost for development\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\n\nfunction App() {\n  const [currentStep, setCurrentStep] = useState('form'); // 'form', 'paths', 'interaction', 'results'\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [learningPaths, setLearningPaths] = useState([]);\n  const [interactionData, setInteractionData] = useState(null); // { material, question_for_user, session_finished, summary }\n  const [finalSummary, setFinalSummary] = useState('');\n  const [formDataForRetry, setFormDataForRetry] = useState(null); // Store form data if needed for retry/restart\n\n  // --- API Call Functions ---\n\n  const handleApiCall = useCallback(async (endpoint, method = 'GET', body = null) => {\n    setIsLoading(true);\n    setError('');\n    try {\n      const options = {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      if (body) {\n        options.body = JSON.stringify(body);\n      }\n\n      const response = await fetch(`${API_BASE_URL}${endpoint}`, options);\n\n      if (!response.ok) {\n        let errorMsg = `HTTP error! status: ${response.status}`;\n        try {\n            const errData = await response.json();\n            errorMsg = errData.message || errorMsg;\n        } catch (e) {\n            // Ignore if response is not JSON\n        }\n        throw new Error(errorMsg);\n      }\n\n      const data = await response.json();\n      if (data.status !== 'success') {\n        throw new Error(data.message || 'API request failed');\n      }\n      return data; // Return the payload part of the response\n\n    } catch (err) {\n      console.error(\"API Call Error:\", err);\n      setError(err.message || 'An unexpected error occurred.');\n      return null; // Indicate failure\n    } finally {\n      setIsLoading(false);\n    }\n  }, []); // No dependencies needed for useCallback here\n\n  const handleFormSubmit = useCallback(async (formData) => {\n    setFormDataForRetry(formData); // Save form data\n    const data = await handleApiCall('/analyze_form', 'POST', formData);\n    if (data) {\n      // Directly fetch paths after successful form submission\n      const pathData = await handleApiCall('/get_learning_paths', 'GET');\n      if (pathData && pathData.paths) {\n        setLearningPaths(pathData.paths);\n        setCurrentStep('paths');\n      } else {\n         setError(error || 'Failed to fetch learning paths after submitting form.');\n      }\n    }\n  }, [handleApiCall, error]); // Add error to dependency array if needed\n\n  const handlePathSelection = useCallback(async (pathName) => {\n    const data = await handleApiCall('/start_quiz', 'POST', { chosen_path_name: pathName });\n    if (data && data.interaction) {\n      setInteractionData(data.interaction);\n      setCurrentStep('interaction');\n    }\n  }, [handleApiCall]);\n\n  const handleInteractionSubmit = useCallback(async (answer) => {\n    const data = await handleApiCall('/submit_answer', 'POST', { answer });\n    if (data && data.interaction) {\n      setInteractionData(data.interaction); // Update interaction state (might contain summary)\n      if (data.interaction.session_finished) {\n        setFinalSummary(data.interaction.summary || 'Session finished.');\n        setCurrentStep('results');\n      }\n      // If session_finished is false, we'd stay in 'interaction' step\n      // but for MVP, it always finishes here.\n    }\n  }, [handleApiCall]);\n\n  const handleRestart = () => {\n      // Reset state to initial values\n      setCurrentStep('form');\n      setIsLoading(false);\n      setError('');\n      setLearningPaths([]);\n      setInteractionData(null);\n      setFinalSummary('');\n      // Optionally clear formDataForRetry or keep it to pre-fill form\n      // setFormDataForRetry(null);\n  };\n\n\n  // --- Rendering Logic ---\n\n  const renderStep = () => {\n    switch (currentStep) {\n      case 'form':\n        return <FormComponent onSubmit={handleFormSubmit} isLoading={isLoading} initialData={formDataForRetry} />;\n      case 'paths':\n        return <PathSelectionComponent paths={learningPaths} onSelectPath={handlePathSelection} isLoading={isLoading} />;\n      case 'interaction':\n        return <InteractionComponent interactionData={interactionData} onSubmitAnswer={handleInteractionSubmit} isLoading={isLoading} />;\n      case 'results':\n        return <ResultsComponent summary={finalSummary} onRestart={handleRestart} />;\n      default:\n        return <p>Invalid step.</p>;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>AI Learning Assistant MVP</h1>\n      </header>\n      <main className=\"App-main\">\n        {error && <p className=\"error-message\">Error: {error}</p>}\n        {isLoading && <p className=\"loading-indicator\">Loading...</p>}\n        {renderStep()}\n      </main>\n      <footer className=\"App-footer\">\n        <p>GDG EdTech Hackathon Project</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}