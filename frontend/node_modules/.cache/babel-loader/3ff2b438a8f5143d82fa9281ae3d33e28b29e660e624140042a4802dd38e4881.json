{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Downloads\\\\Pyitonit\\\\PROJS\\\\GDG 3\\\\gdg-edtech-hackathon\\\\frontend\\\\src\\\\components\\\\InteractionComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InteractionComponent({\n  interactionData,\n  onSubmitAnswer,\n  isLoading\n}) {\n  _s();\n  const [answer, setAnswer] = useState('');\n\n  // Clear answer field when interaction data changes (new question)\n  useEffect(() => {\n    setAnswer('');\n  }, [interactionData]);\n  if (!interactionData) {\n    // Simple, clean loading state\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-indicator\",\n      children: \"Loading interaction...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    material,\n    question_for_user,\n    session_finished\n  } = interactionData;\n\n  // Clean handling of finished state\n  if (session_finished) {\n    // Consider a more styled component later if needed, but <p> is simple\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Session has finished.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 14\n    }, this);\n  }\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Corrected logic: Submit if there's an answer OR if there's no question (Continue button case)\n    if (answer.trim() || !question_for_user) {\n      onSubmitAnswer(answer); // Sends empty answer for \"Continue\"\n      // setAnswer(''); // State is already cleared by useEffect on data change\n    }\n  };\n\n  // The existing structure utilizes the CSS classes effectively for a modern look.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"interaction-container\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: \"Processing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this), material && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"material-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Learning Material:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          whiteSpace: 'pre-wrap'\n        },\n        children: material\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), question_for_user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Question:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: question_for_user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: answer,\n          onChange: e => setAnswer(e.target.value),\n          placeholder: \"Your answer...\",\n          rows: \"4\" // Keep reasonable default size\n          ,\n          disabled: isLoading\n          // Inherits modern styling from App.css\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading || !answer.trim() // Also disable if answer is empty\n          ,\n          className: \"submit-answer-button\" // Uses the specific \"ghost\" button style\n          ,\n          children: \"Submit Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), material && !question_for_user && !isLoading &&\n    /*#__PURE__*/\n    // Using a form allows reusing the handleSubmit logic\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        marginTop: '20px'\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }, this), !material && !question_for_user && !isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Waiting for next step...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(InteractionComponent, \"dOASnFDgECg0lV2u636icfza9eQ=\");\n_c = InteractionComponent;\nexport default InteractionComponent;\nvar _c;\n$RefreshReg$(_c, \"InteractionComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","InteractionComponent","interactionData","onSubmitAnswer","isLoading","_s","answer","setAnswer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","material","question_for_user","session_finished","handleSubmit","e","preventDefault","trim","style","whiteSpace","onSubmit","value","onChange","target","placeholder","rows","disabled","type","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/David/Downloads/Pyitonit/PROJS/GDG 3/gdg-edtech-hackathon/frontend/src/components/InteractionComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction InteractionComponent({ interactionData, onSubmitAnswer, isLoading }) {\r\n  const [answer, setAnswer] = useState('');\r\n\r\n  // Clear answer field when interaction data changes (new question)\r\n  useEffect(() => {\r\n      setAnswer('');\r\n  }, [interactionData]);\r\n\r\n  if (!interactionData) {\r\n    // Simple, clean loading state\r\n    return <p className=\"loading-indicator\">Loading interaction...</p>;\r\n  }\r\n\r\n  const { material, question_for_user, session_finished } = interactionData;\r\n\r\n  // Clean handling of finished state\r\n  if (session_finished) {\r\n      // Consider a more styled component later if needed, but <p> is simple\r\n      return <p>Session has finished.</p>;\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Corrected logic: Submit if there's an answer OR if there's no question (Continue button case)\r\n    if (answer.trim() || !question_for_user) {\r\n        onSubmitAnswer(answer); // Sends empty answer for \"Continue\"\r\n        // setAnswer(''); // State is already cleared by useEffect on data change\r\n    }\r\n  };\r\n\r\n  // The existing structure utilizes the CSS classes effectively for a modern look.\r\n  return (\r\n    <div className=\"interaction-container\">\r\n      {/* Loading overlay provides clear feedback during processing */}\r\n      {isLoading && <div className=\"loading-overlay\">Processing...</div>}\r\n\r\n      {/* Material Section: Uses h3 (with border) and p styles */}\r\n      {material && (\r\n        <div className=\"material-section\">\r\n          <h3>Learning Material:</h3>\r\n          {/* pre-wrap preserves formatting from the backend */}\r\n          <p style={{ whiteSpace: 'pre-wrap' }}>{material}</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Question Section: Uses h3, p, textarea, and specific button styles */}\r\n      {question_for_user && (\r\n        <div className=\"question-section\">\r\n          <h3>Question:</h3>\r\n          <p>{question_for_user}</p>\r\n          <form onSubmit={handleSubmit}>\r\n            <textarea\r\n              value={answer}\r\n              onChange={(e) => setAnswer(e.target.value)}\r\n              placeholder=\"Your answer...\"\r\n              rows=\"4\" // Keep reasonable default size\r\n              disabled={isLoading}\r\n              // Inherits modern styling from App.css\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading || !answer.trim()} // Also disable if answer is empty\r\n              className=\"submit-answer-button\" // Uses the specific \"ghost\" button style\r\n            >\r\n              Submit Answer\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      {/* Continue Button Section: Appears when material is shown, but no question yet */}\r\n      {material && !question_for_user && !isLoading && (\r\n           // Using a form allows reusing the handleSubmit logic\r\n           <form onSubmit={handleSubmit} style={{ marginTop: '20px' }}> {/* Add some space */}\r\n                {/* This button inherits the base 'button' style from App.css */}\r\n                <button type=\"submit\" disabled={isLoading}>\r\n                    Continue\r\n                </button>\r\n           </form>\r\n       )}\r\n\r\n       {/* Fallback message if waiting without material/question */}\r\n       {!material && !question_for_user && !isLoading && (\r\n           <p>Waiting for next step...</p>\r\n       )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InteractionComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}